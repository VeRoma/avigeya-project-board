// public/js/ui/render.test.js

// –ú–æ–∫–∏—Ä—É–µ–º DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
document.body.innerHTML = `
    <div id="app-header"></div>
    <div id="main-content"></div>
`;

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é
import { renderProjects } from './render.js';
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º store, —á—Ç–æ–±—ã "–º–æ–∫–∞—Ç—å" –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–∏
import * as store from '../store.js';

// –°–æ–∑–¥–∞–µ–º "–∑–∞–≥–ª—É—à–∫—É" –¥–ª—è store
jest.mock('../store.js');

// –û–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–±–æ—Ä —Ç–µ—Å—Ç–æ–≤ –¥–ª—è renderProjects
describe('renderProjects sorting logic', () => {

    // –ü–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–∫ –¥–ª—è store.getAllStatuses
    beforeEach(() => {
        const mockStatuses = [
            { name: '–í —Ä–∞–±–æ—Ç–µ',     icon: 'üõ†Ô∏è', order: 1 },
            { name: '–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é', icon: 'üì•', order: 2 },
            { name: '–ù–∞ –∫–æ–Ω—Ç—Ä–æ–ª–µ',  icon: 'üîç', order: 3 },
            { name: '–û—Ç–ª–æ–∂–µ–Ω–æ',     icon: '‚è≥', order: 4 },
            { name: '–í—ã–ø–æ–ª–Ω–µ–Ω–æ',    icon: '‚úîÔ∏è', order: 5 }
        ];
        store.getAllStatuses.mockReturnValue(mockStatuses);
    });

    // –¢–µ—Å—Ç ‚Ññ1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã
    test('–¥–æ–ª–∂–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –ø–æ —á–∏—Å–ª–æ–≤–æ–º—É –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É', () => {
        const projects = [{
            name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç',
            tasks: [
                { taskId: 't2', name: '–ó–∞–¥–∞—á–∞ —Å P2', status: '–í —Ä–∞–±–æ—Ç–µ', priority: 2 },
                { taskId: 't3', name: '–ó–∞–¥–∞—á–∞ —Å P13', status: '–í —Ä–∞–±–æ—Ç–µ', priority: 13 },
                { taskId: 't1', name: '–ó–∞–¥–∞—á–∞ —Å P1', status: '–í —Ä–∞–±–æ—Ç–µ', priority: 1 },
            ]
        }];

        renderProjects(projects, 'Admin', 'admin');

        const renderedTasks = document.querySelectorAll('.card .font-medium');
        const renderedTaskNames = Array.from(renderedTasks).map(el => el.textContent);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Ä—è–¥–æ–∫ –∑–∞–¥–∞—á —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
        expect(renderedTaskNames).toEqual([
            '–ó–∞–¥–∞—á–∞ —Å P1',
            '–ó–∞–¥–∞—á–∞ —Å P2',
            '–ó–∞–¥–∞—á–∞ —Å P13'
        ]);
    });

    // –¢–µ—Å—Ç ‚Ññ2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–∂–Ω—É—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å—É –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
    test('–¥–æ–ª–∂–µ–Ω —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –ø–æ—Ä—è–¥–∫—É —Å—Ç–∞—Ç—É—Å–∞, –∞ –∑–∞—Ç–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É', () => {
        const projects = [{
            name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç',
            tasks: [
                { taskId: 't4', name: '–ó–∞–¥–∞—á–∞ "–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é" P2', status: '–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é', priority: 2 },
                { taskId: 't2', name: '–ó–∞–¥–∞—á–∞ "–í —Ä–∞–±–æ—Ç–µ" P10', status: '–í —Ä–∞–±–æ—Ç–µ', priority: 10 },
                { taskId: 't5', name: '–ó–∞–¥–∞—á–∞ "–ù–∞ –∫–æ–Ω—Ç—Ä–æ–ª–µ" P1', status: '–ù–∞ –∫–æ–Ω—Ç—Ä–æ–ª–µ', priority: 1 },
                { taskId: 't1', name: '–ó–∞–¥–∞—á–∞ "–í —Ä–∞–±–æ—Ç–µ" P1', status: '–í —Ä–∞–±–æ—Ç–µ', priority: 1 },
                { taskId: 't3', name: '–ó–∞–¥–∞—á–∞ "–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é" P1', status: '–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é', priority: 1 },
            ]
        }];

        renderProjects(projects, 'Admin', 'admin');

        const renderedTasks = document.querySelectorAll('.card .font-medium');
        const renderedTaskNames = Array.from(renderedTasks).map(el => el.textContent);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—ã–π –∏ —Ç–æ—á–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
        expect(renderedTaskNames).toEqual([
            '–ó–∞–¥–∞—á–∞ "–í —Ä–∞–±–æ—Ç–µ" P1',      // –°—Ç–∞—Ç—É—Å "–í —Ä–∞–±–æ—Ç–µ" (order 1), priority 1
            '–ó–∞–¥–∞—á–∞ "–í —Ä–∞–±–æ—Ç–µ" P10',     // –°—Ç–∞—Ç—É—Å "–í —Ä–∞–±–æ—Ç–µ" (order 1), priority 10
            '–ó–∞–¥–∞—á–∞ "–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é" P1',  // –°—Ç–∞—Ç—É—Å "–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é" (order 2), priority 1
            '–ó–∞–¥–∞—á–∞ "–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é" P2',  // –°—Ç–∞—Ç—É—Å "–ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é" (order 2), priority 2
            '–ó–∞–¥–∞—á–∞ "–ù–∞ –∫–æ–Ω—Ç—Ä–æ–ª–µ" P1',   // –°—Ç–∞—Ç—É—Å "–ù–∞ –∫–æ–Ω—Ç—Ä–æ–ª–µ" (order 3), priority 1
        ]);
    });
});
